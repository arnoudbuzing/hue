(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    586732,      11469]
NotebookOptionsPosition[    580715,      11316]
NotebookOutlinePosition[    581090,      11332]
CellTagsIndexPosition[    581047,      11329]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Philips Hue Project", "Title",
 CellChangeTimes->{{3.708802134512233*^9, 
  3.7088021394866004`*^9}},ExpressionUUID->"0fe64235-a6a3-4d56-9c27-\
bf96ba3f9f99"],

Cell[TextData[{
 "The ip address for you Philips Hue is unique to your network. Follow the \
instructions on the ",
 ButtonBox["Philips Hue web site",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.developers.meethue.com/documentation/getting-started"], 
    None},
  ButtonNote->
   "https://www.developers.meethue.com/documentation/getting-started"],
 " to get help on determining your ip address:"
}], "Text",
 CellChangeTimes->{{3.708801999512947*^9, 3.7088020323477807`*^9}, {
  3.708802085415846*^9, 
  3.708802128411396*^9}},ExpressionUUID->"ce0ea48e-1879-4afc-92aa-\
dcccfcadc450"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hueip", "=", "\"\<http://192.168.1.75\>\""}]], "Input",
 CellChangeTimes->{{3.7087261752621636`*^9, 3.708726184995286*^9}, {
  3.7088021573841324`*^9, 3.7088021705375233`*^9}, {3.7088025336228495`*^9, 
  3.708802535806614*^9}, {3.708802574019538*^9, 
  3.708802576989921*^9}},ExpressionUUID->"87d838e0-3d3f-464a-a8b5-\
871f7631244a"],

Cell[BoxData["\<\"http://192.168.1.75\"\>"], "Output",
 CellChangeTimes->{
  3.708802577721035*^9},ExpressionUUID->"0e099142-0791-4215-bd6f-\
287e1b68afe3"]
}, Open  ]],

Cell["This base url is shared by all api calls:", "Text",
 CellChangeTimes->{{3.7088025505568013`*^9, 
  3.7088025670881357`*^9}},ExpressionUUID->"6e5b60d7-31a5-45a4-bd60-\
a09024e94e1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"baseurl", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"{", 
    RowBox[{"hueip", ",", "\"\<api\>\""}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.708802423997051*^9, 3.708802426381744*^9}, {
  3.7088024634166164`*^9, 3.7088024710100856`*^9}, {3.7088025041740413`*^9, 
  3.7088025453380885`*^9}},ExpressionUUID->"8ef69b69-66cb-4aaa-b320-\
3138c7224970"],

Cell[BoxData["\<\"http://192.168.1.75/api\"\>"], "Output",
 CellChangeTimes->{
  3.7088024717466726`*^9, 3.7088025069753747`*^9, 3.7088025382913113`*^9, {
   3.7088025687357006`*^9, 
   3.708802579806421*^9}},ExpressionUUID->"f43ec489-f5c7-4749-a96e-\
febd1af0742e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get a username", "Subsubsection",
 CellChangeTimes->{{3.708802591543991*^9, 
  3.708802594174818*^9}},ExpressionUUID->"515b9079-776e-486f-914b-\
f4a2d6efca5d"],

Cell["\<\
To create a new authorized user, press the large button on the Hue Bridge and \
evaluate the following input. This only needs to be done once, provided you \
save the username that is returned:\
\>", "Text",
 CellChangeTimes->{{3.7088028467092867`*^9, 
  3.7088029345539937`*^9}},ExpressionUUID->"63892836-02bf-4349-802b-\
9013fa3d8f91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"URLExecute", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HTTPRequest", "[", 
     RowBox[{"baseurl", ",", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"Method", "\[Rule]", "\"\<POST\>\""}], ",", 
        RowBox[{"\"\<Body\>\"", "\[Rule]", 
         RowBox[{"ExportString", "[", 
          RowBox[{
           RowBox[{"<|", 
            RowBox[{
            "\"\<devicetype\>\"", "\[Rule]", "\"\<wolfram#wolfram\>\""}], 
            "|>"}], ",", "\"\<JSON\>\""}], "]"}]}]}], "|>"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\"\<RawJSON\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.708802597823164*^9, 3.7088026770907097`*^9}, {
  3.708802743989626*^9, 3.7088027661048594`*^9}, {3.7088027985626707`*^9, 
  3.7088027989464703`*^9}, {3.70880283070883*^9, 
  3.7088028412933826`*^9}},ExpressionUUID->"b3d6b5c7-b4dc-4211-a8fc-\
0500d7773a1c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{"\<\"success\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"username\"\>", 
      "\[Rule]", "\<\"q6rT1wnC3av63e8ouFjK0Hfy4HPsbFnO3cB2JUui\"\>"}], 
     "\[RightAssociation]"}]}], "\[RightAssociation]"}], "}"}]], "Output",
 CellChangeTimes->{{3.708802747182131*^9, 3.7088027670236907`*^9}, 
   3.708802801963617*^9, 3.708802834509351*^9, 
   3.7088029732044387`*^9},ExpressionUUID->"7097ee6e-9f77-4766-9167-\
6daf40531e42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"username", "=", 
  RowBox[{
   RowBox[{"First", "[", "result", "]"}], "[", 
   RowBox[{"\"\<success\>\"", ",", "\"\<username\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.708726138281068*^9, 3.7087261499864063`*^9}, {
  3.7088029775203056`*^9, 
  3.7088030048210297`*^9}},ExpressionUUID->"486cd1ec-6941-48e2-9d7d-\
f022e867dd9e"],

Cell[BoxData["\<\"q6rT1wnC3av63e8ouFjK0Hfy4HPsbFnO3cB2JUui\"\>"], "Output",
 CellChangeTimes->{
  3.7087261541895676`*^9, {3.708802989719018*^9, 
   3.7088030060051928`*^9}},ExpressionUUID->"1b965e80-c8df-4516-8bbe-\
8c0e68cfaae5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lights API", "Subsubsection",
 CellChangeTimes->{{3.708803024236224*^9, 
  3.7088030270749702`*^9}},ExpressionUUID->"cb3ff420-8038-4ece-9398-\
e46ff5958e32"],

Cell["Get information about the lights in your network:", "Text",
 CellChangeTimes->{{3.708803035136473*^9, 
  3.7088030444037266`*^9}},ExpressionUUID->"1cf44131-b2c3-4950-a5db-\
4753596a0843"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lightsbaseurl", "=", 
  RowBox[{"URLBuild", "[", 
   RowBox[{"{", 
    RowBox[{"baseurl", ",", "username", ",", "\"\<lights\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7088031705608144`*^9, 3.7088031821915016`*^9}, {
  3.708803291578642*^9, 
  3.7088032939429502`*^9}},ExpressionUUID->"02d6099b-253e-48d1-9072-\
60d61718f67e"],

Cell[BoxData["\<\"http://192.168.1.75/api/\
q6rT1wnC3av63e8ouFjK0Hfy4HPsbFnO3cB2JUui/lights\"\>"], "Output",
 CellChangeTimes->{3.708803183491284*^9, 3.708803295112296*^9, 
  3.7088050543926983`*^9},ExpressionUUID->"c55138ef-41e0-4ceb-b08d-\
95131d22224b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"LightsInformation", "[", "]"}], ":=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"URLExecute", "[", 
    RowBox[{"lightsbaseurl", ",", "\"\<RawJSON\>\""}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7087262039920545`*^9, 3.7087262280367236`*^9}, {
  3.708803050402551*^9, 3.708803095184044*^9}, {3.708803175091323*^9, 
  3.7088031807129803`*^9}, {3.7088032355234594`*^9, 3.708803250107417*^9}, {
  3.7088032992270813`*^9, 
  3.70880330031195*^9}},ExpressionUUID->"647c8174-aee7-46e5-83cb-\
494ebe7a239c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lightsinfo", "=", 
  RowBox[{"LightsInformation", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.7088032516565094`*^9, 3.708803254161861*^9}, {
  3.708804121645923*^9, 
  3.708804124416337*^9}},ExpressionUUID->"c40aec87-3e19-4507-901a-\
2e5191d0bcec"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "state", "type", "name", "modelid", "manufacturername", "uniqueid",
             "swversion", "swconfigid", "productid"}, {
            
            TypeSystem`Struct[{
             "on", "bri", "hue", "sat", "effect", "xy", "ct", "alert", 
              "colormode", "reachable"}, {
              TypeSystem`Atom[TypeSystem`Boolean], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[
               TypeSystem`Enumeration["none"]], 
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 2], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[
               TypeSystem`Enumeration["none"]], 
              TypeSystem`Atom[
               TypeSystem`Enumeration["hs"]], 
              TypeSystem`Atom[TypeSystem`Boolean]}], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Extended color light"]], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["LCT014"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Philips"]], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["1.15.2_r19181"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["A315E69E"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Philips-LCT014-1-A19ECLv4"]]}], 3], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[6]} -> 1, {All, "state"} -> 
           Association[{All, "state", "on"} -> 1, {All, "state", "bri"} -> 
             1, {All, "state", "hue"} -> 1, {All, "state", "sat"} -> 
             1, {All, "state", "effect"} -> 1, {All, "state", "xy"} -> 
             1, {All, "state", "ct"} -> 1, {All, "state", "alert"} -> 
             1, {All, "state", "colormode"} -> 1, {All, "state", "reachable"} -> 
             1], {All, "type"} -> 1, {All, "name"} -> 1, {All, "modelid"} -> 
           1, {All, "manufacturername"} -> 1, {All, "uniqueid"} -> 
           1, {All, "swversion"} -> 1, {All, "swconfigid"} -> 
           1, {All, "productid"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
             TypeSystem`PackageScope`RowShape[
              Association["state" -> TypeSystem`PackageScope`RowShape[
                 Association[
                 "on" -> TypeSystem`PackageScope`AtomShape[36], "bri" -> 
                  TypeSystem`PackageScope`AtomShape[34], "hue" -> 
                  TypeSystem`PackageScope`AtomShape[34], "sat" -> 
                  TypeSystem`PackageScope`AtomShape[34], "effect" -> 
                  TypeSystem`PackageScope`AtomShape[36.], "xy" -> 
                  TypeSystem`PackageScope`UnknownShape, "ct" -> 
                  TypeSystem`PackageScope`AtomShape[34], "alert" -> 
                  TypeSystem`PackageScope`AtomShape[36.], "colormode" -> 
                  TypeSystem`PackageScope`AtomShape[27.], "reachable" -> 
                  TypeSystem`PackageScope`AtomShape[36]]], "type" -> 
               TypeSystem`PackageScope`AtomShape[180.], "name" -> 
               TypeSystem`PackageScope`AtomShape[153.60000000000002`], 
               "modelid" -> TypeSystem`PackageScope`AtomShape[54.], 
               "manufacturername" -> TypeSystem`PackageScope`AtomShape[63.], 
               "uniqueid" -> 
               TypeSystem`PackageScope`AtomShape[249.60000000000002`], 
               "swversion" -> TypeSystem`PackageScope`AtomShape[117.], 
               "swconfigid" -> TypeSystem`PackageScope`AtomShape[72.], 
               "productid" -> TypeSystem`PackageScope`AtomShape[225.]]]]], 
           3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[262824429], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "state", "type", "name", "modelid", "manufacturername", "uniqueid",
             "swversion", "swconfigid", "productid"}, {
            
            TypeSystem`Struct[{
             "on", "bri", "hue", "sat", "effect", "xy", "ct", "alert", 
              "colormode", "reachable"}, {
              TypeSystem`Atom[TypeSystem`Boolean], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[
               TypeSystem`Enumeration["none"]], 
              TypeSystem`Vector[
               TypeSystem`Atom[Real], 2], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[
               TypeSystem`Enumeration["none"]], 
              TypeSystem`Atom[
               TypeSystem`Enumeration["hs"]], 
              TypeSystem`Atom[TypeSystem`Boolean]}], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Extended color light"]], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["LCT014"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Philips"]], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["1.15.2_r19181"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["A315E69E"]], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Philips-LCT014-1-A19ECLv4"]]}], 3], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[262824429]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"state\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"state\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "state"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "state"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"type\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"type\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "type"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "type"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "name"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"modelid\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"modelid\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "modelid"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "modelid"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"manufacturername\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"manufacturername\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "manufacturername"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "manufacturername"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"uniqueid\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"uniqueid\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "uniqueid"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "uniqueid"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"swversion\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"swversion\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "swversion"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "swversion"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"swconfigid\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"swconfigid\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "swconfigid"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "swconfigid"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"productid\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"productid\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "productid"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "productid"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"on\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"on\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "state", "on"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "state", "on"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"bri\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"bri\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "state", "bri"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "state", "bri"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"hue\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"hue\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "state", "hue"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "state", "hue"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"sat\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"sat\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "state", "sat"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "state", "sat"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"effect\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"effect\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "state", "effect"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "state", "effect"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"xy\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"xy\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "state", "xy"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "state", "xy"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"ct\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ct\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "state", "ct"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "state", "ct"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"alert\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"alert\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "state", "alert"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "state", "alert"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"colormode\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"colormode\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "state", "colormode"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "state", "colormode"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reachable\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reachable\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    All, "state", "reachable"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[All, "state", "reachable"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["1", 
                    Style[
                    "1", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    Key["1"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                   GeneralUtilities`Slice[
                    Key["1"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["state"], 
                   Key["on"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["254"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["state"], 
                   Key["bri"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["state"], 
                   Key["hue"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["state"], 
                   Key["sat"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["none", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["state"], 
                   Key["effect"]]], "Mouse"], 
                ImageSize -> {{36., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{0.3804, 0.3768}, ShowStringCharacters -> False], 
                    Style[
                    Style[{0.3804, 0.3768}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    Key["1"], 
                    Key["state"], 
                    Key["xy"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["state"], 
                   Key["xy"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["247"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["state"], 
                   Key["ct"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["none", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["state"], 
                   Key["alert"]]], "Mouse"], 
                ImageSize -> {{36., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["hs", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["state"], 
                   Key["colormode"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["state"], 
                   Key["reachable"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Extended color light", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["type"]]], "Mouse"], 
                ImageSize -> {{180., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Hue color lamp 1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["LCT014", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["modelid"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Philips", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["manufacturername"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["00:17:88:01:02:51:21:79-0b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["uniqueid"]]], "Mouse"], 
                ImageSize -> {{249.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1.15.2_r19181", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["swversion"]]], "Mouse"], 
                ImageSize -> {{117., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A315E69E", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["swconfigid"]]], "Mouse"], 
                ImageSize -> {{72., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Philips-LCT014-1-A19ECLv4", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["1"], 
                   Key["productid"]]], "Mouse"], 
                ImageSize -> {{225., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["2", 
                    Style[
                    "2", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    Key["2"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                   GeneralUtilities`Slice[
                    Key["2"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["state"], 
                   Key["on"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["254"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["state"], 
                   Key["bri"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["state"], 
                   Key["hue"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["state"], 
                   Key["sat"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["none", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["state"], 
                   Key["effect"]]], "Mouse"], 
                ImageSize -> {{36., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{0.3804, 0.3768}, ShowStringCharacters -> False], 
                    Style[
                    Style[{0.3804, 0.3768}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    Key["2"], 
                    Key["state"], 
                    Key["xy"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["state"], 
                   Key["xy"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["247"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["state"], 
                   Key["ct"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["none", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["state"], 
                   Key["alert"]]], "Mouse"], 
                ImageSize -> {{36., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["hs", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["state"], 
                   Key["colormode"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["state"], 
                   Key["reachable"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Extended color light", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["type"]]], "Mouse"], 
                ImageSize -> {{180., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Hue color lamp 2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["LCT014", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["modelid"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Philips", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["manufacturername"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["00:17:88:01:02:55:16:95-0b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["uniqueid"]]], "Mouse"], 
                ImageSize -> {{249.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1.15.2_r19181", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["swversion"]]], "Mouse"], 
                ImageSize -> {{117., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A315E69E", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["swconfigid"]]], "Mouse"], 
                ImageSize -> {{72., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Philips-LCT014-1-A19ECLv4", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["2"], 
                   Key["productid"]]], "Mouse"], 
                ImageSize -> {{225., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["3", 
                    Style[
                    "3", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    Key["3"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                   GeneralUtilities`Slice[
                    Key["3"]]], "Mouse"], 
                 ImageSize -> {{28.800000000000004`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["state"], 
                   Key["on"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["254"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["state"], 
                   Key["bri"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["state"], 
                   Key["hue"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["state"], 
                   Key["sat"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["none", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["state"], 
                   Key["effect"]]], "Mouse"], 
                ImageSize -> {{36., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{0.3804, 0.3768}, ShowStringCharacters -> False], 
                    Style[
                    Style[{0.3804, 0.3768}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][{
                    Key["3"], 
                    Key["state"], 
                    Key["xy"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["state"], 
                   Key["xy"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["247"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["state"], 
                   Key["ct"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["none", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["state"], 
                   Key["alert"]]], "Mouse"], 
                ImageSize -> {{36., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["hs", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["state"], 
                   Key["colormode"]]], "Mouse"], 
                ImageSize -> {{27., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["state"], 
                   Key["reachable"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Extended color light", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["type"]]], "Mouse"], 
                ImageSize -> {{180., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Hue color lamp 3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["name"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["LCT014", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["modelid"]]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Philips", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["manufacturername"]]], "Mouse"], 
                ImageSize -> {{63., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["00:17:88:01:02:51:21:87-0b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["uniqueid"]]], "Mouse"], 
                ImageSize -> {{249.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1.15.2_r19181", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["swversion"]]], "Mouse"], 
                ImageSize -> {{117., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["A315E69E", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["swconfigid"]]], "Mouse"], 
                ImageSize -> {{72., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Philips-LCT014-1-A19ECLv4", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
                  GeneralUtilities`Slice[
                   Key["3"], 
                   Key["productid"]]], "Mouse"], 
                ImageSize -> {{225., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 512931650]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[512931650][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {2244., {98., 107.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.708803258740639*^9, 3.708803303480756*^9, 
  3.7088041257798166`*^9, 
  3.7088050552741833`*^9},ExpressionUUID->"55aaefb1-4e19-4fef-8794-\
60a0bef6b93f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lightsnumbers", "=", 
  RowBox[{"Keys", "[", "lightsinfo", "]"}]}]], "Input",
 CellChangeTimes->{{3.708804126211774*^9, 
  3.7088041820530844`*^9}},ExpressionUUID->"81bec261-e2e9-4ff6-9383-\
6c6ea3ae9f12"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Atom[String], 3], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`AtomShape[28.800000000000004`]], 3, {}], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1885755705], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Atom[String], 3], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[1885755705]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Pane[
                Annotation["1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1440211281][
                  GeneralUtilities`Slice[1]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1440211281][
                  GeneralUtilities`Slice[2]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1440211281][
                  GeneralUtilities`Slice[3]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1440211281][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1440211281]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1440211281][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1440211281][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {47., {63., 72.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7088041352656403`*^9, 3.7088041829193573`*^9}, 
   3.7088050555121055`*^9},ExpressionUUID->"af0e09f2-ecaf-4ced-8177-\
da9eb44fd57f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"LightsInformation", "[", "n_Integer", "]"}], ":=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"URLExecute", "[", 
    RowBox[{
     RowBox[{"URLBuild", "[", 
      RowBox[{"{", 
       RowBox[{"lightsbaseurl", ",", 
        RowBox[{"ToString", "[", "n", "]"}]}], "}"}], "]"}], ",", 
     "\"\<RawJSON\>\""}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.708803306165769*^9, 
  3.7088033375641565`*^9}},ExpressionUUID->"7351b627-4e5b-4055-9d00-\
f1fa0809563d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LightsInformation", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.7088033421650777`*^9, 
  3.70880334796163*^9}},ExpressionUUID->"c37b3d8b-326f-4b25-b549-\
43295f3f3d75"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 9, "InitialType" -> 
        TypeSystem`Struct[{
          "state", "type", "name", "modelid", "manufacturername", "uniqueid", 
           "swversion", "swconfigid", "productid"}, {
           
           TypeSystem`Struct[{
            "on", "bri", "hue", "sat", "effect", "xy", "ct", "alert", 
             "colormode", "reachable"}, {
             TypeSystem`Atom[TypeSystem`Boolean], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 2], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[TypeSystem`Boolean]}], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], "Shape" -> 
        TypeSystem`PackageScope`DocumentShape[
          
          Association[{"state", "on"} -> 
           TypeSystem`PackageScope`AtomShape[36], {"state", "bri"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"state", "hue"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"state", "sat"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"state", "effect"} -> 
           TypeSystem`PackageScope`AtomShape[38.400000000000006`], {
            "state", "xy"} -> 
           TypeSystem`PackageScope`UnknownShape, {"state", "ct"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"state", "alert"} -> 
           TypeSystem`PackageScope`AtomShape[38.400000000000006`], {
            "state", "colormode"} -> 
           TypeSystem`PackageScope`AtomShape[28.800000000000004`], {
            "state", "reachable"} -> 
           TypeSystem`PackageScope`AtomShape[36], {"type"} -> 
           TypeSystem`PackageScope`AtomShape[192.00000000000003`], {"name"} -> 
           TypeSystem`PackageScope`AtomShape[153.60000000000002`], {
            "modelid"} -> 
           TypeSystem`PackageScope`AtomShape[57.60000000000001], {
            "manufacturername"} -> 
           TypeSystem`PackageScope`AtomShape[67.20000000000002], {"uniqueid"} -> 
           TypeSystem`PackageScope`AtomShape[249.60000000000002`], {
            "swversion"} -> 
           TypeSystem`PackageScope`AtomShape[124.80000000000001`], {
            "swconfigid"} -> 
           TypeSystem`PackageScope`AtomShape[76.80000000000001], {
            "productid"} -> 
           TypeSystem`PackageScope`AtomShape[240.00000000000003`]], 2], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[799124520], 
        "Type" -> TypeSystem`Struct[{
          "state", "type", "name", "modelid", "manufacturername", "uniqueid", 
           "swversion", "swconfigid", "productid"}, {
           
           TypeSystem`Struct[{
            "on", "bri", "hue", "sat", "effect", "xy", "ct", "alert", 
             "colormode", "reachable"}, {
             TypeSystem`Atom[TypeSystem`Boolean], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Vector[
              TypeSystem`Atom[Real], 2], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[TypeSystem`Boolean]}], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[799124520]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"state\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"state\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"state", "on"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "on"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"on\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"on\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"state", "on"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "on"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "on"]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"bri\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"bri\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"state", "bri"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "bri"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["254"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "bri"]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"hue\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"hue\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"state", "hue"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "hue"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "hue"]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"sat\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"sat\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"state", "sat"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "sat"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "sat"]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"effect\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"effect\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"state", "effect"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "effect"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["none", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "effect"]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"xy\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"xy\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"state", "xy"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "xy"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{0.3804, 0.3768}, ShowStringCharacters -> False], 
                    Style[
                    Style[{0.3804, 0.3768}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"state", "xy"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "xy"]], "Mouse"]]}, {
              SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"ct\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ct\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"state", "ct"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "ct"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["247"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "ct"]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"alert\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"alert\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"state", "alert"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "alert"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["none", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "alert"]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"colormode\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"colormode\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"state", "colormode"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "colormode"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["hs", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "colormode"]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reachable\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"reachable\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"state", "reachable"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "reachable"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["state", "reachable"]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"type\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"type\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"type"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["type"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Pane[
                Annotation["Extended color light", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["type"]], "Mouse"], 
                ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["name"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Pane[
                Annotation["Hue color lamp 1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["name"]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"modelid\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"modelid\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"modelid"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["modelid"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Pane[
                Annotation["LCT014", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["modelid"]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"manufacturername\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"manufacturername\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"manufacturername"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["manufacturername"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}],
                SpanFromLeft, 
               Pane[
                Annotation["Philips", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["manufacturername"]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"uniqueid\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"uniqueid\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"uniqueid"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["uniqueid"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Pane[
                Annotation["00:17:88:01:02:51:21:79-0b", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["uniqueid"]], "Mouse"], 
                ImageSize -> {{249.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"swversion\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"swversion\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"swversion"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["swversion"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Pane[
                Annotation["1.15.2_r19181", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["swversion"]], "Mouse"], 
                ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"swconfigid\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"swconfigid\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"swconfigid"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["swconfigid"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Pane[
                Annotation["A315E69E", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["swconfigid"]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"productid\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"productid\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1569533208][{"productid"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["productid"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Pane[
                Annotation["Philips-LCT014-1-A19ECLv4", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
                  GeneralUtilities`Slice["productid"]], "Mouse"], 
                ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1569533208][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1569533208]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1569533208][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {471., {330., 339.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7088033496639357`*^9, 
  3.7088050559283705`*^9},ExpressionUUID->"197be08a-8f4b-427a-871c-\
d245928eed11"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChangeLights", "[", 
   RowBox[{"n_Integer", ",", 
    RowBox[{"hue_Integer", "/;", 
     RowBox[{"0", "\[LessEqual]", "hue", "\[LessEqual]", "65535"}]}]}], "]"}],
   ":=", 
  RowBox[{"ChangeLights", "[", 
   RowBox[{"n", ",", "hue", ",", "255", ",", "255"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.708803474502804*^9, 3.7088036390725393`*^9}, {
  3.7088043191093063`*^9, 3.708804338363752*^9}, {3.708804540076642*^9, 
  3.7088046388493147`*^9}, {3.708805029258545*^9, 
  3.7088050301583967`*^9}},ExpressionUUID->"4c91b894-2aba-47b0-b95c-\
045e46257edc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChangeLights", "[", 
   RowBox[{"n_Integer", ",", 
    RowBox[{"hue_Integer", "/;", 
     RowBox[{"0", "\[LessEqual]", "hue", "\[LessEqual]", "65535"}]}], ",", 
    RowBox[{"sat_Integer", "/;", 
     RowBox[{"0", "\[LessEqual]", "sat", "\[LessEqual]", "255"}]}], ",", 
    RowBox[{"bri_Integer", "/;", 
     RowBox[{"0", "\[LessEqual]", "bri", "\[LessEqual]", "255"}]}]}], "]"}], ":=", 
  RowBox[{"Dataset", "[", "\[IndentingNewLine]", 
   RowBox[{"URLExecute", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HTTPRequest", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"URLBuild", "[", 
        RowBox[{"{", 
         RowBox[{"lightsbaseurl", ",", 
          RowBox[{"ToString", "[", "n", "]"}], ",", "\"\<state\>\""}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"Method", "\[Rule]", "\"\<PUT\>\""}], ",", 
         RowBox[{"\"\<Body\>\"", "\[Rule]", 
          RowBox[{"ExportString", "[", 
           RowBox[{
            RowBox[{"<|", 
             RowBox[{
              RowBox[{"\"\<on\>\"", "\[Rule]", "True"}], ",", 
              RowBox[{"\"\<hue\>\"", "\[Rule]", "hue"}], ",", 
              RowBox[{"\"\<sat\>\"", "\[Rule]", "sat"}], ",", 
              RowBox[{"\"\<bri\>\"", "\[Rule]", "bri"}]}], "|>"}], ",", 
            "\"\<JSON\>\""}], "]"}]}]}], "|>"}]}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", "\"\<RawJSON\>\""}], "]"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.708803474502804*^9, 3.7088036390725393`*^9}, {
   3.7088043191093063`*^9, 3.708804338363752*^9}, {3.708804540076642*^9, 
   3.708804601587783*^9}, {3.7088046472332287`*^9, 3.708804656231294*^9}, 
   3.708805030695535*^9},ExpressionUUID->"32cfab9b-566e-4465-ba44-\
c8107d260002"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChangeLights", "[", 
  RowBox[{"3", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.708803660270201*^9, 3.7088036764553213`*^9}, 
   3.7088050313953686`*^9},ExpressionUUID->"c9aa60c9-4b7e-48d2-bb02-\
c8b48af2f996"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"success"}, {
            TypeSystem`Assoc[
             TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "success"} -> 2], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association["success" -> TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`KeyValueShape[
                  TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                  TypeSystem`PackageScope`UnknownShape]], 1, {
                All, "success"}]]]], 4, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1407587970], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"success"}, {
            TypeSystem`Assoc[
             TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1407587970]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 348712964][{
                    All, "success"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[348712964][
                  GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["/lights/3/state/on", 
                    Style[
                    "/lights/3/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 348712964][{
                    1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[348712964][
                   GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[348712964][
                  GeneralUtilities`Slice[1, 
                   Key["success"], 
                   Key["/lights/3/state/on"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["/lights/3/state/hue", 
                    Style[
                    "/lights/3/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 348712964][{
                    2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[348712964][
                   GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[348712964][
                  GeneralUtilities`Slice[2, 
                   Key["success"], 
                   Key["/lights/3/state/hue"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["/lights/3/state/sat", 
                    Style[
                    "/lights/3/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 348712964][{
                    3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[348712964][
                   GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["254"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[348712964][
                  GeneralUtilities`Slice[3, 
                   Key["success"], 
                   Key["/lights/3/state/sat"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["/lights/3/state/bri", 
                    Style[
                    "/lights/3/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 348712964][{
                    4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[348712964][
                   GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["254"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[348712964][
                  GeneralUtilities`Slice[4, 
                   Key["success"], 
                   Key["/lights/3/state/bri"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 348712964][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 348712964]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[348712964][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[348712964][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {276., {98., 107.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.708803666109067*^9, 3.7088036772558165`*^9}, {
   3.7088043242786355`*^9, 3.708804341965848*^9}, 3.7088046597794266`*^9, 
   3.708805056576187*^9},ExpressionUUID->"6dea3230-71cf-4d83-b074-\
9e0f74144b01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChangeLights", "[", 
  RowBox[{"3", ",", "0", ",", "100", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.708803660270201*^9, 3.7088036764553213`*^9}, {
   3.7088046647323284`*^9, 3.7088046687325783`*^9}, 
   3.70880503197956*^9},ExpressionUUID->"1bcefed5-1d10-4c3f-a7f1-\
e43af44398e4"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"success"}, {
            TypeSystem`Assoc[
             TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "success"} -> 2], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association["success" -> TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`KeyValueShape[
                  TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                  TypeSystem`PackageScope`UnknownShape]], 1, {
                All, "success"}]]]], 4, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[116072954], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"success"}, {
            TypeSystem`Assoc[
             TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[116072954]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1738569578][{All, "success"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1738569578][
                  GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["/lights/3/state/on", 
                    Style[
                    "/lights/3/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1738569578][{1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1738569578][
                   GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1738569578][
                  GeneralUtilities`Slice[1, 
                   Key["success"], 
                   Key["/lights/3/state/on"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["/lights/3/state/hue", 
                    Style[
                    "/lights/3/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1738569578][{2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1738569578][
                   GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1738569578][
                  GeneralUtilities`Slice[2, 
                   Key["success"], 
                   Key["/lights/3/state/hue"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["/lights/3/state/sat", 
                    Style[
                    "/lights/3/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1738569578][{3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1738569578][
                   GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["100"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1738569578][
                  GeneralUtilities`Slice[3, 
                   Key["success"], 
                   Key["/lights/3/state/sat"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["/lights/3/state/bri", 
                    Style[
                    "/lights/3/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1738569578][{4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1738569578][
                   GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["100"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1738569578][
                  GeneralUtilities`Slice[4, 
                   Key["success"], 
                   Key["/lights/3/state/bri"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1738569578][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1738569578]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1738569578][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1738569578][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {276., {98., 107.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7088046705025115`*^9, 
  3.708805056999469*^9},ExpressionUUID->"e1949f42-bb89-4f08-9d3f-\
7b7c388b16e6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChangeLights", "[", 
   RowBox[{"n_Integer", ",", 
    RowBox[{"color", ":", 
     RowBox[{"(", 
      RowBox[{"_RGBColor", "|", "_GrayLevel", "|", "_Hue"}], ")"}]}]}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "hue", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"hue", "=", 
      RowBox[{"ColorConvert", "[", 
       RowBox[{"color", ",", "\"\<Hue\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ChangeLights", "[", 
      RowBox[{"n", ",", 
       RowBox[{"Round", "[", 
        RowBox[{"65535", 
         RowBox[{"First", "[", "hue", "]"}]}], "]"}], ",", 
       RowBox[{"Round", "[", 
        RowBox[{"255", " ", 
         RowBox[{"hue", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Round", "[", 
        RowBox[{"255", 
         RowBox[{"Last", "[", "hue", "]"}]}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7088037136712456`*^9, 3.7088037468363714`*^9}, {
  3.7088038299508495`*^9, 3.7088038885003495`*^9}, {3.7088039950291643`*^9, 
  3.708804006595517*^9}, {3.708804691121138*^9, 3.708804745618246*^9}, {
  3.708804825671297*^9, 3.7088048320856905`*^9}, {3.708804888430296*^9, 
  3.7088048936685686`*^9}, {3.7088050326961403`*^9, 3.7088050332432146`*^9}, {
  3.708805114464236*^9, 
  3.7088051156952047`*^9}},ExpressionUUID->"59423677-bce2-48fa-97d9-\
4be540d2f4ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChangeLights", "[", 
  RowBox[{"3", ",", "Blue"}], "]"}]], "Input",
 CellChangeTimes->{{3.7088039084901857`*^9, 3.7088039260492363`*^9}, {
   3.708804013046632*^9, 3.7088040319652977`*^9}, 
   3.708805033881609*^9},ExpressionUUID->"59dce346-4016-41d4-8108-\
1ace1887a945"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"success"}, {
            TypeSystem`Assoc[
             TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "success"} -> 2], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association["success" -> TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`KeyValueShape[
                  TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                  TypeSystem`PackageScope`UnknownShape]], 1, {
                All, "success"}]]]], 4, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1180530594], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"success"}, {
            TypeSystem`Assoc[
             TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1180530594]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2020209794][{All, "success"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2020209794][
                  GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["/lights/3/state/on", 
                    Style[
                    "/lights/3/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2020209794][{1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2020209794][
                   GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2020209794][
                  GeneralUtilities`Slice[1, 
                   Key["success"], 
                   Key["/lights/3/state/on"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["/lights/3/state/hue", 
                    Style[
                    "/lights/3/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2020209794][{2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2020209794][
                   GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["43690"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2020209794][
                  GeneralUtilities`Slice[2, 
                   Key["success"], 
                   Key["/lights/3/state/hue"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["/lights/3/state/sat", 
                    Style[
                    "/lights/3/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2020209794][{3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2020209794][
                   GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["254"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2020209794][
                  GeneralUtilities`Slice[3, 
                   Key["success"], 
                   Key["/lights/3/state/sat"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["/lights/3/state/bri", 
                    Style[
                    "/lights/3/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2020209794][{4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2020209794][
                   GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["254"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2020209794][
                  GeneralUtilities`Slice[4, 
                   Key["success"], 
                   Key["/lights/3/state/bri"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2020209794][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2020209794]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2020209794][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2020209794][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {276., {98., 107.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.708803918488017*^9, 3.7088039269499373`*^9}, {
   3.7088040085997543`*^9, 3.7088040325813994`*^9}, 3.7088043596131725`*^9, 
   3.708804747419301*^9, 3.7088048340856943`*^9, 3.7088048954851027`*^9, 
   3.708805057400165*^9, 
   3.7088051217791204`*^9},ExpressionUUID->"5f5420bf-8341-4094-a340-\
6c8c598bb6f8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChangeLights", "[", 
   RowBox[{"All", ",", 
    RowBox[{"color", ":", 
     RowBox[{"(", 
      RowBox[{"_RGBColor", "|", "_GrayLevel", "|", "_Hue"}], ")"}]}]}], "]"}],
   ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ChangeLights", "[", 
     RowBox[{
      RowBox[{"ToExpression", "[", "i", "]"}], ",", "color"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Normal", "[", "lightsnumbers", "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7088040528349247`*^9, 3.7088040608547764`*^9}, {
  3.7088042048127832`*^9, 3.708804227431856*^9}, {3.7088042597286415`*^9, 
  3.7088042629677725`*^9}, {3.708804839538459*^9, 3.708804845383746*^9}, {
  3.7088048764645796`*^9, 3.7088048824104867`*^9}, {3.7088050345447392`*^9, 
  3.7088050354448557`*^9}, {3.7088051027747955`*^9, 
  3.7088051072302375`*^9}},ExpressionUUID->"1bdd8d5c-8fc0-43fa-8cfb-\
7d4f24f6d9fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChangeLights", "[", 
  RowBox[{"All", ",", "Green"}], "]"}]], "Input",
 CellChangeTimes->{{3.7088042297084894`*^9, 3.708804267298395*^9}, 
   3.7088050361826897`*^9},ExpressionUUID->"5f0fd19b-9b35-4e0d-a8ed-\
d5579c19bb85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[461975313], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[461975313]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 818015983][{
                    All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   818015983][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/on", 
                    Style[
                    "/lights/1/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 818015983][{
                    1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    818015983][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   818015983][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/hue", 
                    Style[
                    "/lights/1/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 818015983][{
                    2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    818015983][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["21845"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   818015983][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/sat", 
                    Style[
                    "/lights/1/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 818015983][{
                    3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    818015983][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   818015983][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/bri", 
                    Style[
                    "/lights/1/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 818015983][{
                    4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    818015983][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   818015983][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 818015983][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 818015983]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[818015983][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[818015983][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[555740898], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[555740898]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1941320789][{All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1941320789][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/on", 
                    Style[
                    "/lights/2/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1941320789][{1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1941320789][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1941320789][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/hue", 
                    Style[
                    "/lights/2/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1941320789][{2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1941320789][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["21845"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1941320789][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/sat", 
                    Style[
                    "/lights/2/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1941320789][{3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1941320789][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1941320789][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/bri", 
                    Style[
                    "/lights/2/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1941320789][{4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1941320789][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1941320789][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1941320789][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1941320789]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1941320789][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1941320789][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[304225377], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[304225377]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2029567187][{All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2029567187][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/on", 
                    Style[
                    "/lights/3/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2029567187][
                    {1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2029567187][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2029567187][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/hue", 
                    Style[
                    "/lights/3/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2029567187][{2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2029567187][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["21845"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2029567187][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/sat", 
                    Style[
                    "/lights/3/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2029567187][{3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2029567187][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2029567187][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/bri", 
                    Style[
                    "/lights/3/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2029567187][{4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2029567187][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2029567187][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2029567187][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2029567187]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2029567187][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2029567187][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[
           TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )]}], "}"}]], "Output",
 CellChangeTimes->{{3.7088042380963326`*^9, 3.7088042683992586`*^9}, 
   3.708804362650891*^9, 3.7088047513861938`*^9, 3.708804855840695*^9, 
   3.7088048978495097`*^9, 3.7088050580795994`*^9, 
   3.708805124882222*^9},ExpressionUUID->"d4205304-0f79-4850-a9f9-\
b4b0c4753440"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChangeLights", "[", 
  RowBox[{"All", ",", "Blue"}], "]"}]], "Input",
 CellChangeTimes->{{3.7088042297084894`*^9, 3.708804278600952*^9}, 
   3.7088050368826733`*^9},ExpressionUUID->"3f51ebb0-3b40-45d0-86be-\
e98c9ea3bccf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[1208514393], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[1208514393]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 489152707][{
                    All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   489152707][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/on", 
                    Style[
                    "/lights/1/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 489152707][{
                    1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    489152707][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   489152707][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/hue", 
                    Style[
                    "/lights/1/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 489152707][{
                    2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    489152707][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["43690"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   489152707][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/sat", 
                    Style[
                    "/lights/1/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 489152707][{
                    3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    489152707][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   489152707][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/bri", 
                    Style[
                    "/lights/1/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 489152707][{
                    4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    489152707][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   489152707][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 489152707][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 489152707]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[489152707][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[489152707][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[431925670], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[431925670]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 695813079][{
                    All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   695813079][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/on", 
                    Style[
                    "/lights/2/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 695813079][{
                    1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    695813079][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   695813079][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/hue", 
                    Style[
                    "/lights/2/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 695813079][{
                    2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    695813079][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["43690"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   695813079][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/sat", 
                    Style[
                    "/lights/2/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 695813079][{
                    3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    695813079][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   695813079][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/bri", 
                    Style[
                    "/lights/2/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 695813079][{
                    4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    695813079][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   695813079][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 695813079][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 695813079]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[695813079][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[695813079][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[501931336], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[501931336]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2077458142][{All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2077458142][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/on", 
                    Style[
                    "/lights/3/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2077458142][
                    {1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2077458142][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2077458142][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/hue", 
                    Style[
                    "/lights/3/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2077458142][{2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2077458142][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["43690"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2077458142][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/sat", 
                    Style[
                    "/lights/3/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2077458142][{3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2077458142][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2077458142][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/bri", 
                    Style[
                    "/lights/3/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2077458142][{4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2077458142][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2077458142][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2077458142][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2077458142]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2077458142][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2077458142][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[
           TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )]}], "}"}]], "Output",
 CellChangeTimes->{3.7088042800179253`*^9, 3.7088044034079638`*^9, 
  3.708804753904193*^9, 3.7088048577884936`*^9, 3.7088048994035997`*^9, 
  3.708805059034731*^9},ExpressionUUID->"68bb902b-cfcc-4bc2-9e7e-\
860ea77125d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChangeLights", "[", 
  RowBox[{"All", ",", "White"}], "]"}]], "Input",
 CellChangeTimes->{{3.7088047570058804`*^9, 3.7088047609590793`*^9}, 
   3.708805037529831*^9},ExpressionUUID->"349743d9-87c5-4fed-9709-\
d4a054a4034f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[2016184889], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[2016184889]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1858464539][{All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1858464539][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/on", 
                    Style[
                    "/lights/1/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1858464539][{1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1858464539][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1858464539][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/hue", 
                    Style[
                    "/lights/1/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1858464539][{2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1858464539][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1858464539][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/sat", 
                    Style[
                    "/lights/1/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1858464539][{3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1858464539][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1858464539][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/bri", 
                    Style[
                    "/lights/1/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1858464539][{4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1858464539][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1858464539][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1858464539][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1858464539]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1858464539][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1858464539][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[1213008695], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[1213008695]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 871878210][{
                    All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   871878210][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/on", 
                    Style[
                    "/lights/2/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 871878210][{
                    1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    871878210][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   871878210][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/hue", 
                    Style[
                    "/lights/2/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 871878210][{
                    2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    871878210][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   871878210][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/sat", 
                    Style[
                    "/lights/2/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 871878210][{
                    3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    871878210][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   871878210][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/bri", 
                    Style[
                    "/lights/2/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 871878210][{
                    4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    871878210][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   871878210][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 871878210][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 871878210]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[871878210][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[871878210][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[2034101976], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[2034101976]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44570293][{
                    All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44570293][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/on", 
                    Style[
                    "/lights/3/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44570293][{
                    1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    44570293][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44570293][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/hue", 
                    Style[
                    "/lights/3/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44570293][{
                    2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    44570293][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44570293][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/sat", 
                    Style[
                    "/lights/3/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44570293][{
                    3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    44570293][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44570293][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/bri", 
                    Style[
                    "/lights/3/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44570293][{
                    4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    44570293][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44570293][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44570293][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44570293]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44570293][Null] -> 
             "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44570293][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7088047613739777`*^9, 3.708804806953124*^9, {3.7088048598216515`*^9, 
   3.708804862792482*^9}, 3.7088049018915987`*^9, 3.7088049673310227`*^9, 
   3.7088050599365225`*^9},ExpressionUUID->"6fdaae58-aa28-4095-849c-\
917bb525deab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChangeLights", "[", 
  RowBox[{"All", ",", "Black"}], "]"}]], "Input",
 CellChangeTimes->{{3.7088047570058804`*^9, 3.7088047609590793`*^9}, {
   3.708804952437579*^9, 3.708804956905858*^9}, 
   3.70880502787936*^9},ExpressionUUID->"515131f2-5092-4114-8d69-\
ed1323359e3c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[1856693699], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[1856693699]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 61975596][{
                    All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[61975596][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/on", 
                    Style[
                    "/lights/1/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 61975596][{
                    1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    61975596][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[61975596][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/hue", 
                    Style[
                    "/lights/1/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 61975596][{
                    2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    61975596][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[61975596][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/sat", 
                    Style[
                    "/lights/1/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 61975596][{
                    3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    61975596][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[61975596][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/bri", 
                    Style[
                    "/lights/1/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 61975596][{
                    4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    61975596][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[61975596][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 61975596][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 61975596]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[61975596][Null] -> 
             "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[61975596][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[509903259], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[509903259]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 861096519][{
                    All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   861096519][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/on", 
                    Style[
                    "/lights/2/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 861096519][{
                    1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    861096519][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   861096519][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/hue", 
                    Style[
                    "/lights/2/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 861096519][{
                    2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    861096519][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   861096519][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/sat", 
                    Style[
                    "/lights/2/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 861096519][{
                    3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    861096519][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   861096519][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/bri", 
                    Style[
                    "/lights/2/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 861096519][{
                    4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    861096519][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   861096519][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 861096519][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 861096519]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[861096519][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[861096519][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[846005168], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[846005168]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1923183032][{All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1923183032][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/on", 
                    Style[
                    "/lights/3/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1923183032][
                    {1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1923183032][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1923183032][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/hue", 
                    Style[
                    "/lights/3/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1923183032][{2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1923183032][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1923183032][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/sat", 
                    Style[
                    "/lights/3/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1923183032][{3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1923183032][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1923183032][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/bri", 
                    Style[
                    "/lights/3/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1923183032][{4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1923183032][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1923183032][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1923183032][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1923183032]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923183032][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923183032][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[
           TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )]}], "}"}]], "Output",
 CellChangeTimes->{3.708804958439189*^9, 
  3.7088050609374747`*^9},ExpressionUUID->"6147f597-c785-4905-b7b2-\
30a0c0c3f3cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChangeLights", "[", 
  RowBox[{"All", ",", "White"}], "]"}]], "Input",
 CellChangeTimes->{{3.7088047570058804`*^9, 3.7088047609590793`*^9}, {
   3.708804952437579*^9, 3.708804956905858*^9}, 3.70880502787936*^9, {
   3.708805074871391*^9, 
   3.7088050782257633`*^9}},ExpressionUUID->"d739dc5d-5478-4ae4-9064-\
a7ed9a82cd52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[762831314], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[762831314]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1052414982][{All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1052414982][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/on", 
                    Style[
                    "/lights/1/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1052414982][{1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1052414982][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1052414982][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/hue", 
                    Style[
                    "/lights/1/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1052414982][{2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1052414982][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1052414982][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/sat", 
                    Style[
                    "/lights/1/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1052414982][{3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1052414982][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1052414982][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/bri", 
                    Style[
                    "/lights/1/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1052414982][{4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1052414982][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1052414982][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1052414982][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1052414982]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1052414982][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1052414982][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[511616607], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[511616607]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 350975335][{
                    All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   350975335][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/on", 
                    Style[
                    "/lights/2/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 350975335][{
                    1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    350975335][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   350975335][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/hue", 
                    Style[
                    "/lights/2/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 350975335][{
                    2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    350975335][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   350975335][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/sat", 
                    Style[
                    "/lights/2/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 350975335][{
                    3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    350975335][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   350975335][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/bri", 
                    Style[
                    "/lights/2/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 350975335][{
                    4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    350975335][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   350975335][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 350975335][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 350975335]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[350975335][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[350975335][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[1411437210], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[1411437210]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2088088470][{All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2088088470][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/on", 
                    Style[
                    "/lights/3/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2088088470][{1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2088088470][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2088088470][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/hue", 
                    Style[
                    "/lights/3/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2088088470][{2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2088088470][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2088088470][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/sat", 
                    Style[
                    "/lights/3/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2088088470][{3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2088088470][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2088088470][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/bri", 
                    Style[
                    "/lights/3/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2088088470][{4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    2088088470][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2088088470][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2088088470][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2088088470]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2088088470][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2088088470][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.708805079912942*^9},ExpressionUUID->"2acda811-aed3-4c96-b1df-\
873ebd0107f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChangeLights", "[", 
  RowBox[{"All", ",", 
   RowBox[{"Hue", "[", "0", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7088051286534805`*^9, 
  3.7088051366232224`*^9}},ExpressionUUID->"a79c1212-16b9-4077-a6fe-\
ce364fdb577d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[326225129], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[326225129]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1412364153][{All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1412364153][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/on", 
                    Style[
                    "/lights/1/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1412364153][{1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1412364153][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1412364153][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/hue", 
                    Style[
                    "/lights/1/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1412364153][{2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1412364153][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1412364153][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/sat", 
                    Style[
                    "/lights/1/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1412364153][{3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1412364153][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1412364153][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/bri", 
                    Style[
                    "/lights/1/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1412364153][{4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1412364153][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1412364153][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1412364153][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1412364153]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1412364153][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1412364153][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[1467229525], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[1467229525]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 377716974][{
                    All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   377716974][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/on", 
                    Style[
                    "/lights/2/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 377716974][{
                    1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    377716974][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   377716974][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/hue", 
                    Style[
                    "/lights/2/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 377716974][{
                    2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    377716974][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   377716974][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/sat", 
                    Style[
                    "/lights/2/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 377716974][{
                    3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    377716974][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   377716974][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/bri", 
                    Style[
                    "/lights/2/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 377716974][{
                    4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    377716974][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   377716974][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 377716974][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 377716974]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[377716974][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[377716974][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[1373035457], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[1373035457]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1080683977][{All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1080683977][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/on", 
                    Style[
                    "/lights/3/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1080683977][{1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1080683977][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1080683977][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/hue", 
                    Style[
                    "/lights/3/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1080683977][{2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1080683977][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1080683977][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/sat", 
                    Style[
                    "/lights/3/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1080683977][{3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1080683977][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1080683977][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/bri", 
                    Style[
                    "/lights/3/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1080683977][{4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1080683977][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["254"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1080683977][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1080683977][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1080683977]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1080683977][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1080683977][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.708805138025513*^9},ExpressionUUID->"41a20889-c0c3-4a85-b536-\
f389ebfbee6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChangeLights", "[", 
  RowBox[{"All", ",", 
   RowBox[{"Hue", "[", 
    RowBox[{"0", ",", "0.5", ",", "0.4"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7088051286534805`*^9, 
  3.7088052145229797`*^9}},ExpressionUUID->"9f82dd1d-78fd-49dc-a198-\
95eec7286741"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[1021877435], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[1021877435]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1187462516][{All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1187462516][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/on", 
                    Style[
                    "/lights/1/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1187462516][{1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1187462516][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1187462516][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/1/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/hue", 
                    Style[
                    "/lights/1/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1187462516][{2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1187462516][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1187462516][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/1/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/sat", 
                    Style[
                    "/lights/1/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1187462516][{3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1187462516][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["128"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1187462516][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/1/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/1/state/bri", 
                    Style[
                    "/lights/1/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1187462516][{4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1187462516][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["102"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1187462516][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/1/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1187462516][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1187462516]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1187462516][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1187462516][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[1364593256], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[1364593256]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 752065162][{
                    All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   752065162][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/on", 
                    Style[
                    "/lights/2/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 752065162][{
                    1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    752065162][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   752065162][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/2/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/hue", 
                    Style[
                    "/lights/2/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 752065162][{
                    2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    752065162][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   752065162][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/2/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/sat", 
                    Style[
                    "/lights/2/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 752065162][{
                    3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    752065162][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["128"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   752065162][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/2/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/2/state/bri", 
                    Style[
                    "/lights/2/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 752065162][{
                    4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    752065162][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["102"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   752065162][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/2/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 752065162][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 752065162]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[752065162][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[752065162][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, "success"} -> 2], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`RowShape[
               Association["success" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                  All, "success"}]]]], 4, {}]], "InitialData" -> 
          TypeSystem`PackageScope`CacheHandle[1703575202], "Type" -> 
          TypeSystem`Vector[
            TypeSystem`Struct[{"success"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 1]}], 4], 
          "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[1703575202]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"success\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"success\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1449147606][{All, "success"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1449147606][
                    GeneralUtilities`Slice[All, "success"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Center, Baseline}], SpanFromLeft}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/on", 
                    Style[
                    "/lights/3/state/on", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1449147606][{1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1449147606][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1449147606][
                    GeneralUtilities`Slice[1, 
                    Key["success"], 
                    Key["/lights/3/state/on"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/hue", 
                    Style[
                    "/lights/3/state/hue", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1449147606][{2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1449147606][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1449147606][
                    GeneralUtilities`Slice[2, 
                    Key["success"], 
                    Key["/lights/3/state/hue"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/sat", 
                    Style[
                    "/lights/3/state/sat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1449147606][{3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1449147606][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["128"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1449147606][
                    GeneralUtilities`Slice[3, 
                    Key["success"], 
                    Key["/lights/3/state/sat"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["/lights/3/state/bri", 
                    Style[
                    "/lights/3/state/bri", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1449147606][{4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1449147606][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                   ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["102"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1449147606][
                    GeneralUtilities`Slice[4, 
                    Key["success"], 
                    Key["/lights/3/state/bri"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1449147606][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1449147606]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1449147606][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1449147606][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {276., {98., 107.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )]}], "}"}]], "Output",
 CellChangeTimes->{{3.7088051466594577`*^9, 
  3.7088052166248026`*^9}},ExpressionUUID->"ce467809-983b-49ae-a916-\
83d683fc387c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2048, 1069},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 164, 3, 134, "Title", "ExpressionUUID" -> \
"0fe64235-a6a3-4d56-9c27-bf96ba3f9f99"],
Cell[747, 27, 605, 15, 46, "Text", "ExpressionUUID" -> \
"ce0ea48e-1879-4afc-92aa-dcccfcadc450"],
Cell[CellGroupData[{
Cell[1377, 46, 357, 6, 46, "Input", "ExpressionUUID" -> \
"87d838e0-3d3f-464a-a8b5-871f7631244a"],
Cell[1737, 54, 156, 3, 46, "Output", "ExpressionUUID" -> \
"0e099142-0791-4215-bd6f-287e1b68afe3"]
}, Open  ]],
Cell[1908, 60, 187, 3, 46, "Text", "ExpressionUUID" -> \
"6e5b60d7-31a5-45a4-bd60-a09024e94e1f"],
Cell[CellGroupData[{
Cell[2120, 67, 382, 8, 46, "Input", "ExpressionUUID" -> \
"8ef69b69-66cb-4aaa-b320-3138c7224970"],
Cell[2505, 77, 266, 5, 46, "Output", "ExpressionUUID" -> \
"f43ec489-f5c7-4749-a96e-febd1af0742e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2808, 87, 165, 3, 51, "Subsubsection", "ExpressionUUID" -> \
"515b9079-776e-486f-914b-f4a2d6efca5d"],
Cell[2976, 92, 347, 7, 46, "Text", "ExpressionUUID" -> \
"63892836-02bf-4349-802b-9013fa3d8f91"],
Cell[CellGroupData[{
Cell[3348, 103, 912, 21, 105, "Input", "ExpressionUUID" -> \
"b3d6b5c7-b4dc-4211-a8fc-0500d7773a1c"],
Cell[4263, 126, 520, 11, 50, "Output", "ExpressionUUID" -> \
"7097ee6e-9f77-4766-9167-6daf40531e42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4820, 142, 356, 8, 46, "Input", "ExpressionUUID" -> \
"486cd1ec-6941-48e2-9d7d-f022e867dd9e"],
Cell[5179, 152, 231, 4, 46, "Output", "ExpressionUUID" -> \
"1b965e80-c8df-4516-8bbe-8c0e68cfaae5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5459, 162, 163, 3, 51, "Subsubsection", "ExpressionUUID" -> \
"cb3ff420-8038-4ece-9398-e46ff5958e32"],
Cell[5625, 167, 193, 3, 46, "Text", "ExpressionUUID" -> \
"1cf44131-b2c3-4950-a5db-4753596a0843"],
Cell[CellGroupData[{
Cell[5843, 174, 366, 9, 46, "Input", "ExpressionUUID" -> \
"02d6099b-253e-48d1-9072-60d61718f67e"],
Cell[6212, 185, 256, 4, 46, "Output", "ExpressionUUID" -> "c55138ef-41e0-4ceb-
 b08d-95131d22224b"]
}, Open  ]],
Cell[6483, 192, 544, 12, 46, "Input", "ExpressionUUID" -> \
"647c8174-aee7-46e5-83cb-494ebe7a239c"],
Cell[CellGroupData[{
Cell[7052, 208, 274, 6, 46, "Input", "ExpressionUUID" -> \
"c40aec87-3e19-4507-901a-2e5191d0bcec"],
Cell[7329, 216, 70623, 1455, 230, "Output", "ExpressionUUID" -> \
"55aaefb1-4e19-4fef-8794-60a0bef6b93f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77989, 1676, 229, 5, 46, "Input", "ExpressionUUID" -> \
"81bec261-e2e9-4ff6-9383-6c6ea3ae9f12"],
Cell[78221, 1683, 9698, 173, 160, "Output", "ExpressionUUID" -> \
"af0e09f2-ecaf-4ced-8177-da9eb44fd57f"]
}, Open  ]],
Cell[87934, 1859, 493, 13, 46, "Input", "ExpressionUUID" -> \
"7351b627-4e5b-4055-9d00-f1fa0809563d"],
Cell[CellGroupData[{
Cell[88452, 1876, 197, 4, 46, "Input", "ExpressionUUID" -> \
"c37b3d8b-326f-4b25-b549-43295f3f3d75"],
Cell[88652, 1882, 46645, 916, 694, "Output", "ExpressionUUID" -> \
"197be08a-8f4b-427a-871c-d245928eed11"]
}, Open  ]],
Cell[135312, 2801, 591, 13, 46, "Input", "ExpressionUUID" -> \
"4c91b894-2aba-47b0-b95c-045e46257edc"],
Cell[135906, 2816, 1835, 39, 250, "Input", "ExpressionUUID" -> \
"32cfab9b-566e-4465-ba44-c8107d260002"],
Cell[CellGroupData[{
Cell[137766, 2859, 241, 5, 46, "Input", "ExpressionUUID" -> \
"c9aa60c9-4b7e-48d2-bb02-c8b48af2f996"],
Cell[138010, 2866, 17716, 334, 230, "Output", "ExpressionUUID" -> \
"6dea3230-71cf-4d83-b074-9e0f74144b01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155763, 3205, 316, 6, 46, "Input", "ExpressionUUID" -> \
"1bcefed5-1d10-4c3f-a7f1-e43af44398e4"],
Cell[156082, 3213, 17707, 337, 230, "Output", "ExpressionUUID" -> \
"e1949f42-bb89-4f08-9d3f-7b7c388b16e6"]
}, Open  ]],
Cell[173804, 3553, 1454, 36, 135, "Input", "ExpressionUUID" -> \
"59423677-bce2-48fa-97d9-4be540d2f4ec"],
Cell[CellGroupData[{
Cell[175283, 3593, 296, 6, 46, "Input", "ExpressionUUID" -> \
"59dce346-4016-41d4-8108-1ace1887a945"],
Cell[175582, 3601, 17918, 340, 230, "Output", "ExpressionUUID" -> \
"5f5420bf-8341-4094-a340-6c8c598bb6f8"]
}, Open  ]],
Cell[193515, 3944, 940, 23, 48, "Input", "ExpressionUUID" -> \
"1bdd8d5c-8fc0-43fa-8cfb-7d4f24f6d9fd"],
Cell[CellGroupData[{
Cell[194480, 3971, 247, 5, 46, "Input", "ExpressionUUID" -> \
"5f0fd19b-9b35-4e0d-a8ed-d5579c19bb85"],
Cell[194730, 3978, 55026, 1040, 230, "Output", "ExpressionUUID" -> \
"d4205304-0f79-4850-a9f9-b4b0c4753440"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249793, 5023, 246, 5, 46, "Input", "ExpressionUUID" -> \
"3f51ebb0-3b40-45d0-86be-e98c9ea3bccf"],
Cell[250042, 5030, 54956, 1039, 230, "Output", "ExpressionUUID" -> \
"68bb902b-cfcc-4bc2-9e7e-860ea77125d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305035, 6074, 247, 5, 46, "Input", "ExpressionUUID" -> \
"349743d9-87c5-4fed-9709-d4a054a4034f"],
Cell[305285, 6081, 54828, 1033, 230, "Output", "ExpressionUUID" -> \
"6fdaae58-aa28-4095-849c-917bb525deab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360150, 7119, 296, 6, 46, "Input", "ExpressionUUID" -> \
"515131f2-5092-4114-8d69-ed1323359e3c"],
Cell[360449, 7127, 54702, 1032, 230, "Output", "ExpressionUUID" -> \
"6147f597-c785-4905-b7b2-30a0c0c3f3cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415188, 8164, 348, 7, 46, "Input", "ExpressionUUID" -> \
"d739dc5d-5478-4ae4-9064-a7ed9a82cd52"],
Cell[415539, 8173, 54823, 1037, 230, "Output", "ExpressionUUID" -> \
"2acda811-aed3-4c96-b1df-873ebd0107f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470399, 9215, 251, 6, 46, "Input", "ExpressionUUID" -> \
"a79c1212-16b9-4077-a6fe-ce364fdb577d"],
Cell[470653, 9223, 54831, 1037, 230, "Output", "ExpressionUUID" -> \
"41a20889-c0c3-4a85-b536-f389ebfbee6d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[525521, 10265, 290, 7, 46, "Input", "ExpressionUUID" -> \
"9f82dd1d-78fd-49dc-a198-95eec7286741"],
Cell[525814, 10274, 54861, 1037, 230, "Output", "ExpressionUUID" -> \
"ce467809-983b-49ae-a916-83d683fc387c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

